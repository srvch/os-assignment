#include<bits/stdc++.h> 
using namespace std; 

struct Process 
{ 
    int pid;  
    int bt;   
    int priority; 
}; 


bool comp(Process a, Process b) 
{ 
    return (a.priority < b.priority); 
}   
  
void Pr_Sch(Process proc[], int n) 
{ 
    sort(proc, proc + n, comp); 
  
    cout<< "Order in which processes gets executed \n"; 
    for (int  i = 0 ; i <  n; i++) 
        cout << proc[i].pid <<"\n"; 
}

void Waiting_Time(Process proc[], int n, int wt[]) 
{ 
    wt[0] = 0; //wt-waiting time
    for (int  i = 1; i < n ; i++ ) 
        wt[i] =  proc[i-1].bt + wt[i-1] ; //bt-burst time
} 
  
void Turn_Around_Time( Process proc[], int n, int wt[], int tat[]) //tat-turn around time
{ 
    for (int  i = 0; i < n ; i++) 
    tat[i] = proc[i].bt + wt[i]; 
} 
  

int main() 
{ 
    Process proc[] = {{1, 10, 3}, {2, 1, 1}, {3, 2, 4},{4, 1, 5}, {5, 5, 2}}; 

    int n = sizeof proc / sizeof proc[0]; 
    Pr_Sch(proc, n); 
    return 0; 
} 
